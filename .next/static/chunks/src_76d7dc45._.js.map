{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/user-agent-parser/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function UserAgentParser() {\n  const [userAgent, setUserAgent] = useState(\"\");\n  const [parsedResult, setParsedResult] = useState<Record<string, string> | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleParse = () => {\n    setError(null);\n    setParsedResult(null);\n\n    if (!userAgent.trim()) {\n      setError(\"Please enter a User-Agent string.\");\n      return;\n    }\n\n    try {\n      // Basic parsing logic for demonstration\n      const result: Record<string, string> = {};\n\n      // Extract browser and version\n      const browserMatch = userAgent.match(/(Chrome|Firefox|Safari|Edge|Opera)[\\/\\s]?([\\d\\.]+)/i);\n      if (browserMatch) {\n        result[\"Browser\"] = `${browserMatch[1]} ${browserMatch[2]}`;\n      } else {\n        result[\"Browser\"] = \"Unknown\";\n      }\n\n      // Extract OS info\n      const osMatch = userAgent.match(/\\(([^)]+)\\)/);\n      result[\"Operating System\"] = osMatch ? osMatch[1] : \"Unknown\";\n\n      // Extract device type (simple heuristic)\n      if (/Mobile|Android|iPhone|iPad/i.test(userAgent)) {\n        result[\"Device Type\"] = \"Mobile\";\n      } else {\n        result[\"Device Type\"] = \"Desktop\";\n      }\n\n      setParsedResult(result);\n    } catch (err) {\n      setError(\"Failed to parse User-Agent string.\");\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 py-12 px-4\">\n      <div className=\"max-w-3xl mx-auto\">\n        <Card>\n          <CardHeader>\n            <CardTitle>User-Agent String Parser</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-6\">\n            <div>\n              <label htmlFor=\"ua-input\" className=\"block mb-2 font-medium text-gray-700\">\n                Enter User-Agent String\n              </label>\n              <Input\n                id=\"ua-input\"\n                type=\"text\"\n                value={userAgent}\n                onChange={(e) => setUserAgent(e.target.value)}\n                placeholder=\"Paste User-Agent string here\"\n                className=\"w-full\"\n              />\n            </div>\n            <Button onClick={handleParse} className=\"w-full\">\n              Parse\n            </Button>\n            {error && <p className=\"text-red-600 mt-2\">{error}</p>}\n            {parsedResult && (\n              <div className=\"bg-gray-100 p-4 rounded text-sm\">\n                {Object.entries(parsedResult).map(([key, value]) => (\n                  <div key={key} className=\"mb-2\">\n                    <strong>{key}:</strong> {value}\n                  </div>\n                ))}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAOe,SAAS;;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiC;IAChF,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,cAAc;QAClB,SAAS;QACT,gBAAgB;QAEhB,IAAI,CAAC,UAAU,IAAI,IAAI;YACrB,SAAS;YACT;QACF;QAEA,IAAI;YACF,wCAAwC;YACxC,MAAM,SAAiC,CAAC;YAExC,8BAA8B;YAC9B,MAAM,eAAe,UAAU,KAAK,CAAC;YACrC,IAAI,cAAc;gBAChB,MAAM,CAAC,UAAU,GAAG,GAAG,YAAY,CAAC,EAAE,CAAC,CAAC,EAAE,YAAY,CAAC,EAAE,EAAE;YAC7D,OAAO;gBACL,MAAM,CAAC,UAAU,GAAG;YACtB;YAEA,kBAAkB;YAClB,MAAM,UAAU,UAAU,KAAK,CAAC;YAChC,MAAM,CAAC,mBAAmB,GAAG,UAAU,OAAO,CAAC,EAAE,GAAG;YAEpD,yCAAyC;YACzC,IAAI,8BAA8B,IAAI,CAAC,YAAY;gBACjD,MAAM,CAAC,cAAc,GAAG;YAC1B,OAAO;gBACL,MAAM,CAAC,cAAc,GAAG;YAC1B;YAEA,gBAAgB;QAClB,EAAE,OAAO,KAAK;YACZ,SAAS;QACX;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC,mIAAA,CAAA,OAAI;;kCACH,6LAAC,mIAAA,CAAA,aAAU;kCACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;sCAAC;;;;;;;;;;;kCAEb,6LAAC,mIAAA,CAAA,cAAW;wBAAC,WAAU;;0CACrB,6LAAC;;kDACC,6LAAC;wCAAM,SAAQ;wCAAW,WAAU;kDAAuC;;;;;;kDAG3E,6LAAC,oIAAA,CAAA,QAAK;wCACJ,IAAG;wCACH,MAAK;wCACL,OAAO;wCACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;wCAC5C,aAAY;wCACZ,WAAU;;;;;;;;;;;;0CAGd,6LAAC,qIAAA,CAAA,SAAM;gCAAC,SAAS;gCAAa,WAAU;0CAAS;;;;;;4BAGhD,uBAAS,6LAAC;gCAAE,WAAU;0CAAqB;;;;;;4BAC3C,8BACC,6LAAC;gCAAI,WAAU;0CACZ,OAAO,OAAO,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,iBAC7C,6LAAC;wCAAc,WAAU;;0DACvB,6LAAC;;oDAAQ;oDAAI;;;;;;;4CAAU;4CAAE;;uCADjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAW5B;GAlFwB;KAAA","debugId":null}}]
}